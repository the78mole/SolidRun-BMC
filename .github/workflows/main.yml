name: Build

# To run locally use:
# act

on:
  push:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Generate Short SHA name
      shell: bash
      id: generate-shortsha
      run: |
        echo "SHORT_SHA=`echo ${{ github.sha }} | cut -c 1-8`" >> "$GITHUB_ENV"
        echo "REF_NAME=`echo ${{ github.ref_name }} | sed 's/\//-/g'`" >> "$GITHUB_ENV"
        
    - name: Generate artifact name
      shell: bash
      id: generate-name
      run: |
        echo "Short SHA is: ${{ env.SHORT_SHA }}"
        echo "REF_NAME is: '${{ env.REF_NAME }}'"
        echo "artifact=SolidRun-BMC.${{ env.REF_NAME }}.${{ env.SHORT_SHA }}" >> "$GITHUB_ENV"

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
          fetch-depth: 0
          
    - name: Get the last tag and commit hash
      run: |
        LAST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
        SHORT_COMMIT_HASH=$(git rev-parse --short HEAD)
        RELEASE_NAME="${LAST_TAG}-${SHORT_COMMIT_HASH}"
        echo "LAST_TAG=$LAST_TAG" >> "$GITHUB_ENV"
        echo "RELEASE_NAME=$RELEASE_NAME" >> "$GITHUB_ENV"
        echo "TAG=$LAST_TAG" >> "$GITHUB_ENV"

    - name: Fix git safe.directory in container
      run: mkdir -p /home/runner/work/_temp/_github_home && printf "[safe]\n\tdirectory = /github/workspace" > /home/runner/work/_temp/_github_home/.gitconfig

    - name: Build the project
      uses: xanderhendriks/action-build-stm32cubeide@v10.0
      with:
        project-path: '.'
        project-target: 'SolidRun-BMC/Release'
        
    - name: Upload Published Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.artifact }}
        path: |
          ${{ github.workspace }}/Release/SolidRun-BMC.elf
          ${{ github.workspace }}/Release/SolidRun-BMC.hex
          ${{ github.workspace }}/Release/SolidRun-BMC.list
          ${{ github.workspace }}/Release/SolidRun-BMC.map
          
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG }}
        release_name: ${{ env.RELEASE_NAME }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/Release/SolidRun-BMC.hex
        asset_name: SolidRun-BMC_${{ env.RELEASE_NAME }}_${{ env.TAG }}.hex
        asset_content_type: application/octet-stream
